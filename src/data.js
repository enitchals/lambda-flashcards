const data = [
    "Student should be able to describe and use semantic HTML tags to markup content",
    "Student should be able to demonstrate the use of CSS selectors to style markup",
    "Student should be able to demonstrate CSS specificity and inheritance to create and update styles",
    "Student should be able to identify and use all properties in the box model",
    "Student should be able to demonstrate CSS display properties to build user interface",
    "Student should be able to implement a CSS reset and understand why it’s important for cross browser development",
    "Student should be able to identify and use all properties in the box model",
    "Student should be able to demonstrate CSS display properties to build user interface",
    "Student should be able to implement a CSS reset and understand why it’s important for cross browser development",
    "Student should be able to explain why we use the command line interface (CLI), and demonstrate use of basic CLI commands.",
    "Student should be able to sufficiently explain what version control and Git are, and why as software engineers we use them.",
    "Student should be able to demonstrate an ability to fork and clone a repo.",
    "Student should be able to understand branching, and be able to create a branch locally.",
    "Student should be able to explain and properly utilize the git commands: `status`, `add`, `commit`, and `push`",
    "Student should be able to submit a Pull Request.",
    "Student should be able to describe the differences in fixed, fluid, adaptive, and responsive layouts.",
    "Student should be able to demonstrate knowledge of media queries by correctly implementing them in a project.",
    "Student should be able to craft pixel perfect designs that are also fully responsive",
    "Student should be able to describe why responsive design impacts accessibility",
    "Student should be able to describe and use responsive units to create a fully responsive website",
    "Student should be able to build a percent based layout",
    "Student should be able to install Node, Yarn, LESS, and less-watch-compiler",
    "Student should be able to implement variables, mixins, nesting, nested at-rules, and operations in LESS.",
    "Student should be able to create mixins, functions, escaping, namespaces as well as understand scope.",
    "Student should be able to create a master LESS file and use importing to create a project.",
    "Student should be able to use let, const, var and demonstrate their differences.",
    "Student should be able to create and use object literals as well as describe object properties and methods",
    "Student should be able to create and use arrays as well as array properties and array methods",
    "Student should be able to describe and demonstrate the differences between `function scope` and `block scope`",
    "Student should be able to describe what closure is, how closure is created in a program and why it is important to have different types of `scope`",
    "Student should be able to demonstrate the proper use a of a callback function by passing a function to another function as a parameter",
    "Student should be able to demonstrate ability to use `.map` `.reduce` `.filter` and describe their use cases",
    "Student should be able to explain the four principles of the 'this' keyword and demonstrate each explanation with an example of their uses",
    "Student should be able to describe, and use prototypes, constructor functions the new keyword, and pseudo-classical inheritance to build a small object based video game",
    "Student should be able to describe the uses of the `class` and `extends` keywords, use the `constructor` and `super` functions properly and convert a pseudo classically instantiated program into classes",
    "Student should be able to convert a pseudo classically instantiated program into class syntax",
    "Student should be able to Debug DOM and JavaScript with Dev Tools",
    "Student should be able to Explain what the DOM is, and how it relates to an html page",
    "Student should be able to Use DOM selectors to select elements on a page, and describe the differences in the behavior of each.",
    "Student should be able to Use different properties and methods to manipulate a selected element.",
    "Student should be able to Explain what events are in the browser window, and how event listeners can listen for those events.",
    "Student should be able to add event listeners and event handlers to elements.",
    "Student should be able to recognize event propagation and the method used to prevent it.",
    "Student should be able to Understand and apply Javascript class syntax in creating element components",
    "Student should be able to Build a website from scratch using assets, content, and instructions.",
    "Student should be able to describe ReactJS and the problems that it tries to solve",
    "Student should be able to use an html file set up a react environment and mount an application to a target DOM element using React and ReactDOM.render",
    "Student should be able to use JSX to mount a DOM element and display that element in a web browser",
    "Student should be able to explain how components work, and implement a functional component to render a piece of UI to the screen",
    "Student should be able to describe props and state and how data flows in a react application",
    "Student should be able to use props to dynamically pass data to a React Component making it reusable in different contexts",
    "Student should be able to demonstrate the ability to implement nested functional components",
    "Student should be able to explain class components, and use a class component to render some state data to the DOM",
    "Student should be able to iterate over a list of of data and generate an array of React Components",
    "Student should be able to share data between components using state and props",
    "Student should be able to respond to events triggered by user interaction and handle user input via forms in React",
    "Student should be able to create, read and update a component's state object",
    "Student should be able to describe the rules of the `setState` function and demonstrate two ways to properly use it",
    "Student should be able to implement reusable and nested class components",
    "Student should be able to demonstrate the the ability to use create-react-app to boilerplate a react application",
    "Student should be able to describe and be able to use PropTypes to 'type check' specific data being passed down to a child component",
    "Student should be able to describe the three phases of the React Component Lifecycle",
    "Student should be able to properly explain what the `constructor` and `render` methods do and what their place is in the React Component Lifecycle",
    "Student should be able to use the `componentDidMount` function to set a component's state post render",
    "Student should be able to be able to explain and implement a React Higher Order Component to conditionally render protected content to the screen",
    "Student should be able to explain why state driven views and components are useful patterns for scalability, composability, and reuse and how React enables those patterns",
    "Student should be able to understand how to style React components using CSS as well as Reactstrap",
    "Student should be able to use styled-components to add functional styles to their React Components",
    "Student should be able to explain the difference between client-side routing and sever-side routing",
    "Student should be able to add React Router to an application and set up basic routing",
    "Student should be able to describe the `Route` component and set up routes within a React Application",
    "Student should be able to create dynamic routes using URL parameters and the `match` object",
    "Student should be able to add nested routes to an application and display sub-nav views",
    "Student should be able to use the built in `history` object to programmatically navigate to other routes",
    "Student should be able to explain the difference between `Link` and `NavLink` and when to use which to navigate declaratively between routes",
    "Student should be able to describe promises and demonstrate the use of the `.then` and `.catch` methods",
    "Student should be able to explain what AJAX stands for, it's benefits and how to make AJAX requests from a React Application",
    "Student should be able to explain what HTTP is and the methods used to perform CRUD operations",
    "Student should be able to make GET requests to an external API using axios",
    "Student should be able to make POST requests to an external API using axios",
    "Student should be able to make DELETE requests to an external API using axios",
    "Student should be able to make PUT requests to an external API using axios",
    "Student should be able to demonstrate the proper use of `Object.assign()`, `Array.concat()`, `Array.map()` & `Array.filter()`",
    "Student should be able to explain what Redux is and the problem it solves",
    "Student should be able to create a Redux Store and connect it to a React application",
    "Student should be able to write Actions and Action Creators to describe state changes",
    "Student should be able to write Reducers to respond to actions and update state",
    "Student should be able to describe the Finite State Machine pattern and it's relationship to building Redux applications",
    "Student should be able to add Redux Middleware to a Redux Store",
    "Student should be able to effectively use `redux-thunk` `applyMiddleware` and asynchronous action creators to consume data from external API's",
    "Student should be able to explain what Node.js is and it's core features.",
    "Student should be able to explain what Express is and it's core features.",
    "Student should be able to explain the basics of the REST architectural style.",
    "Student should be able to create an API that can respond to GET requests.",
    "Student should be able to explain how routing works in an express application.",
    "Student should be able to use postman to manually test Web APIs.",
    "Student should be able to read data from the query string, request body and route parameters.",
    "Student should be able to explain what middleware is and the different types.",
    "Student should be able to write custom middleware.",
    "Student should be able to write error handling middleware",
    "Student should be able to use Express Routers to organize Web API code.",
    "Student should be able to explain what a Relational Database is and it's core components.",
    "Student should be able to create databases and tables to store relational data.",
    "Student should be able to explain what SQL is and it's advantages",
    "Student should be able to insert data into a relational database",
    "Student should be able to modify existing data inside a relational database.",
    "Student should be able to delete data from a relational database",
    "Student should be able to query data from a single table",
    "Student should be able to query data from multiple tables",
    "Student should be able to use knex migrations to build a schema",
    "Student should be able to seed data using knex.",
    "Student should be able to explain data normalization and normal forms",
    "Student should be able to explain what is authentication and provide guidelines for password security.",
    "Student should be able to hash passwords before saving them to the database.",
    "Student should be able to explain what is authentication and provide guidelines for password security.",
    "Student should be able to hash passwords before saving them to the database.",
    "Student should be able to explain the three different parts of a JSON web token.",
    "Student should be able to add authentication to an API using JSON Web Tokens (JWTs)",
    "Student should be able to handle a JSON web token produced by a web server within a client side application",
    "Student should be able to explain what automated testing is and why it's important.",
    "Student should be able to use Jest to test the expected behavior of a variety of JavaScript functions.",
    "Student should be able to test asynchronous code.",
    "Student should be able to use Snapshot Testing to detect regressions.",
    "Student should be able to test React components.",
    "Student should be able to test a simple Web API.",
    "Student should be able to write code that demonstrates Python basics",
    "Student should be able to apply basic Python knowledge to a more complex project",
    "Student should be able to understand and apply the concepts of object-oriented design using Python",
    "Student should be able to demonstrate an understanding of inheritance through appropriate method overriding and use of super()",
    "Implement the classic game of Breakout using the pygame library",
    "Though some basic block and ball classes are provided, you will subclass these to add the necessary functionality for the game",
    "Student should be able to define what runtime complexity is and enumerate the main big O runtime classifications",
    "Student should be able to identify when a problem is amenable to a recursive solution and utilize recursion in order to solve it",
    "Student should be able to approach a novel problem and come up with a workable first-pass solution.",
    "Student should be able to take an existing first-pass solution to a problem and improve upon it",
    "Student should be able to enumerate how linked lists work as well as what some of their pros and cons are.",
    "Student should be able to enumerate how queues work as well as what some of their pros and cons are.",
    "Student should be able to enumerate how binary search trees work as well as what some of their pros and cons are.",
    "Student should be able to enumerate how heaps work as well as what some of their pros and cons are.",
    "Student should be able to describe the functional components of a CPU",
    "Student should be able to perform basic bitwise operations",
    "Student should be able to convert between and understand decimal, binary, and hexadecimal",
    "Student should be able to describe the CPU stack and how it's useful",
    "Student should be able to describe how interrupts work and why they're useful",
    "Student should be able to describe how the CPU handles subroutines",
    "Student should be able to describe and use header files, basic types, arrays, strings, flow control, and functions in C",
    "Student should be able to utilize pointers appropriately in order to work with dynamic memory.",
    "Student should be able to describe how a computer's memory model works and how pointers relate to this memory model in C.",
    "Student should be able to use structs to create more complex composite types in C.",
    "Student should be able to describe what processes are, along with how processes are created, destroyed, and executed",
    "Student should be able to describe what system calls are and why they are useful",
    "Student should be able to implement code to manipulate processes using `fork`, `wait`, `exec`, and `pipe` system calls",
    "Student should be able to describe what processes are, along with how processes are created, destroyed, and executed",
    "Student should be able to describe what system calls are and why they are useful",
    "Student should be able to implement code to manipulate processes using `fork`, `wait`, `exec`, and `pipe` system calls",
    "Student should be able to clearly describe the problem that an OS scheduler attempts to solve and how the scheduler algorithm solves it",
    "Student should be able to describe Turing Machines, Lambda Calculus, and Boolean Algebra and how they apply to programming",
    "Student should be able to draw state machines and describe their notation, and be able to describe the function of any simple machine with a state machine.",
    "Student should be able to describe the uses of a regular expression is, construct them, and describe the difference between greedy and non-greedy/lazy",
    "Student should be able to describe what graphs are, describe their components, what they're useful for, and can draw graphs of different types",
    "Student should be able to describe what breadth-first search (BFS) is and its uses, and can manually run a sample BFS",
    "Student should be able to describe what connected components are on a graph and their uses, and can implement an algorithm for finding connected components",
    "Student should be able to describe a depth-first search and its uses, and can manually run a DFS on a graph",
    "Student should be able to understand and explain what a threat model is",
    "Student should be able to list common security exploits and defenses and understand what situations they are relevant in",
    "Student should be able to list and describe basic crypto operations",
    "Student should be able to explain asymmetric crypto trust - PKI versus web of trust",
    "Student should be able to use crypto/security tools as a developer, know a bit about future direction",
    "Student should be able to describe how HTML canvas and screen buffers work",
    "Student should be able to animate a canvas in React with requestAnimationFrame()",
    "Student should be able to describe what a cellular automaton is and how they are useful, describe the rules to Conway's Game of Life and how the Game is Turing-complete",
    "Student should be able to understand and explain what a threat model is",
    "Student should be able to list common security exploits and defenses and understand what situations they are relevant in",
    "Student should be able to list and describe basic crypto operations",
    "Student should be able to explain asymmetric crypto trust - PKI versus web of trust",
    "Student should be able to use crypto/security tools as a developer, know a bit about future direction",
    "Student should be able to setup and use basic Python/Django development environment",
    "Student should be able to describe and use the Django migration system",
    "Student should be able to add a data model to Django",
    "Student should be able to add data to the database using a Python shell",
    "Student should be able to use a .env file to track `SECRET_KEY` and other variables",
    "Student should be able to set up and use the Django admin interface",
    "Student should be able to migrate models with new fields added",
    "Student should be able to subclass and specialize a model",
    "Student should be able to run SQL and ORM commands to investigate Django's SQL database",
    "Student should be able to set up the Django REST Framework and connect a model to an endpoint",
    "Student should be able to control which information is exposed based on the currently-logged-in user",
    "Student should be able to use token authorization to assign correct permissions to various users",
    "Student should be able to effectively use Django's MVC-equivalent pattern",
    "Student should be able to effectively use Django's ORM functionality"
];

export default data;